# Tomcat設定
server:
  port: 8081

# Springframework設定
spring: 
  application.name: container-client
  main.banner-mode: off
  profiles:
    default: properties

# actuator設定
management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: "env,beans"
  tracing:
    sampling:
      probability: 1.0
  # =======
  # ＜Telemetryパイプラインの構成/ gPRC+prometheus＞
  # metrics(micrometer-registry-prometheus) ------(/actuator/prometheus) <---------------------------------------------- Prometheus
  # tracing(micrometer-tracing-bridge-otel) ------(grpc)--┬--> collector --┬-- (http://tempo:4418) ------------------> Grafana Tempo
  # logging(opentelemetry-logback-appender-1.0) --(grpc)--┘                └-- (http://loki:3100/otlp) --------------> Grafana Loki
  # =======
  otlp:
    tracing:
      transport: grpc
      endpoint: "http://localhost:4317" # for gRPC
    logging:
      transport: grpc
      endpoint: "http://localhost:4317" # for gRPC

# ログ設定
logging:
  level:
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - [traceId=%X{traceId}, spanId=%X{spanId}] %msg%n"

# RESTクライアント設定
client:
  connect-url: http://localhost:8080

  